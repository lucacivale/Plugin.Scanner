// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0.3 effective-5.10 (swiftlang-6.0.3.1.10 clang-1600.0.30.1)
// swift-module-flags: -target arm64-apple-ios16.6-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name PluginScanner
// swift-module-flags-ignorable: -no-verify-emitted-module-interface
import Foundation
@_exported import PluginScanner
import Swift
import Vision
import VisionKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@objc public enum TextContentType : Swift.Int {
  case Default
  case dateTimeDuration
  case emailAddress
  case flightNumber
  case fullStreetAddress
  case shipmentTrackingNumber
  case telephoneNumber
  case URL
  @available(iOS 17.0, *)
  case currency
  public func MapToVisionTextContentType() -> VisionKit.DataScannerViewController.TextContentType?
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
@objc(DataScannerViewController) public class DataScannerViewController : ObjectiveC.NSObject {
  @objc @_Concurrency.MainActor public init(recognizedDataTypes: [PluginScanner.RecognizedDataType], qualityLevel: PluginScanner.QualityLevel = QualityLevel.balanced, recognizesMultipleItems: Swift.Bool = false, isHighFrameRateTrackingEnabled: Swift.Bool = true, isPinchToZoomEnabled: Swift.Bool = true, isGuidanceEnabled: Swift.Bool = true, isHighlightingEnabled: Swift.Bool = false)
  @objc @_Concurrency.MainActor public static func isSupported() -> Swift.Bool
  @objc @_Concurrency.MainActor public static func isAvailable() -> Swift.Bool
  @objc @_Concurrency.MainActor public static func supportedTextRecognitionLanguages() -> [Swift.String]
  @objc public static func ScanningUnavailable() -> Foundation.NSMutableSet
  @objc deinit
}
@_hasMissingDesignatedInitializers public class Box<T> {
  @objc deinit
}
@objc public enum QualityLevel : Swift.Int {
  case balanced
  case fast
  case accurate
  public func ToVNQualityLevel() -> VisionKit.DataScannerViewController.QualityLevel
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
@_hasMissingDesignatedInitializers @objc public class RecognizedDataType : ObjectiveC.NSObject {
  @objc public static func text(languages: [Swift.String] = [], textContenttype: PluginScanner.TextContentType = TextContentType.Default) -> PluginScanner.RecognizedDataType
  @objc public static func barcode(symbologies: [Vision.VNBarcodeSymbology] = []) -> PluginScanner.RecognizedDataType
  public func ToVNRecognizedDataType() -> VisionKit.DataScannerViewController.RecognizedDataType
  @objc deinit
}
extension PluginScanner.TextContentType : Swift.Equatable {}
extension PluginScanner.TextContentType : Swift.Hashable {}
extension PluginScanner.TextContentType : Swift.RawRepresentable {}
extension PluginScanner.QualityLevel : Swift.Equatable {}
extension PluginScanner.QualityLevel : Swift.Hashable {}
extension PluginScanner.QualityLevel : Swift.RawRepresentable {}
